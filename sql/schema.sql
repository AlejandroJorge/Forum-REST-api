CREATE TABLE IF NOT EXISTS User (
  User_ID INTEGER PRIMARY KEY AUTOINCREMENT,
  Email TEXT NOT NULL UNIQUE,
  Hashed_Password TEXT NOT NULL,
  Registration_Date INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS Profile (
  User_ID INTEGER PRIMARY KEY,
  Display_Name TEXT NOT NULL,
  Tag_Name TEXT NOT NULL UNIQUE,
  Picture_Path TEXT,
  Background_Path TEXT,
  FOREIGN KEY (User_ID) REFERENCES User(User_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Following (
  Followed_ID INTEGER,
  Follower_ID INTEGER,
  Following_Date INTEGER NOT NULL,
  FOREIGN KEY (Followed_ID) REFERENCES Profile(User_ID) ON DELETE CASCADE,
  FOREIGN KEY (Follower_ID) REFERENCES Profile(User_ID) ON DELETE CASCADE,
  PRIMARY KEY (Followed_ID, Follower_ID)
);

CREATE TABLE IF NOT EXISTS Post (
  Post_ID INTEGER PRIMARY KEY AUTOINCREMENT,
  Title TEXT NOT NULL UNIQUE ,
  Description TEXT NOT NULL,
  Content TEXT NOT NULL,
  Creation_Date TEXT NOT NULL,
  Owner_ID INTEGER NOT NULL,
  FOREIGN KEY (Owner_ID) REFERENCES Profile(User_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Post_Likings (
  Post_ID INTEGER,
  Liker_ID INTEGER,
  FOREIGN KEY (Post_ID) REFERENCES Post(Post_ID) ON DELETE CASCADE,
  FOREIGN KEY (Liker_ID) REFERENCES Profile(User_ID) ON DELETE CASCADE,
  PRIMARY KEY (Post_ID, Liker_ID)
);

CREATE TABLE IF NOT EXISTS Comment (
  Comment_ID INTEGER PRIMARY KEY AUTOINCREMENT,
  Post_ID INTEGER NOT NULL,
  User_ID INTEGER NOT NULL,
  Content TEXT NOT NULL,
  FOREIGN KEY (Post_ID) REFERENCES Post(Post_ID) ON DELETE CASCADE,
  FOREIGN KEY (User_ID) REFERENCES Profile(User_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Comment_Likings (
  Comment_ID INTEGER,
  Liker_ID INTEGER,
  FOREIGN KEY (Comment_ID) REFERENCES Comment(Comment_ID) ON DELETE CASCADE,
  FOREIGN KEY (Liker_ID) REFERENCES Profile(User_ID) ON DELETE CASCADE,
  PRIMARY KEY (Comment_ID, Liker_ID)
);
